syntax = "proto3";

package dongle.auth;
option go_package = "github.com/kimsehyoung/dongle/api/proto/gen/go/authpb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// #######    Account    #######
enum Role {
    UNSPECIFIED = 0;
    ADMIN = 1;
    MANAGER = 2;
    USER = 3;
}

message AccountRequest {
    string login_id = 1;
    string name = 2;
    string password = 3;
    string email = 4;
    string phone_number = 5;
    Role role = 6;
}

message PasswordRequest {
    string password = 1;
    string newPassword = 2;
}

// #######    Token    #######
message CreateTokenRequest {
    string login_id = 1;
    string password = 2;
}
message TokenRequest {
    string refresh_token = 1;
}
message TokenResposne {
	string token = 1;
    string refresh_token = 2;
}

// Config password - getpassword
// hash account id
// level -> memberType


service Auth {
    // #######    Account    #######
    rpc CreateAccount (AccountRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/accounts"
            body: "*"
        };
    };
    rpc DeleteAccount (google.protobuf.Empty) returns (google.protobuf.Empty) {
        // Authorization: Bearer <token>
        option (google.api.http) = {
        };
    };
    rpc ChangePassword (PasswordRequest) returns (google.protobuf.Empty) {
        // Authorization: Bearer <token>
        option (google.api.http) = {
            put: "/accounts/password"
            body: "*"
        };
    };
    rpc ConfirmPassword (PasswordRequest) returns (google.protobuf.Empty) {
        // Authorization: Bearer <token>
        option (google.api.http) = {
            post: "/confirmations/password"
            body: "password"
        };
    };

    // #######    Login    #######
    rpc CreateToken (CreateTokenRequest) returns (TokenResposne) {
        option (google.api.http) = {
            post: "/login/token"
            body: "*"
        };
    };
    rpc RefreshToken (TokenRequest) returns (TokenResposne) {
        option (google.api.http) = {
            post: "/login/token/refresh"
            body: "*"
        };
    }
    rpc RevokeToken (TokenRequest) returns (google.protobuf.Empty) {
        // Authorization: Bearer <token>
        option (google.api.http) = {
            post: "/login/token/revoke"
            body: "*"
        };
    };
}