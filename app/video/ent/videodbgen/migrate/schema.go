// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// OriginalVideoColumns holds the columns for the "original_video" table.
	OriginalVideoColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "account_id", Type: field.TypeInt},
		{Name: "title", Type: field.TypeString, SchemaType: map[string]string{"postgres": "varchar(32)"}},
		{Name: "url", Type: field.TypeString, Unique: true, SchemaType: map[string]string{"postgres": "varchar(64)"}},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
	}
	// OriginalVideoTable holds the schema information for the "original_video" table.
	OriginalVideoTable = &schema.Table{
		Name:       "original_video",
		Columns:    OriginalVideoColumns,
		PrimaryKey: []*schema.Column{OriginalVideoColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "originalvideo_account_id_title",
				Unique:  true,
				Columns: []*schema.Column{OriginalVideoColumns[1], OriginalVideoColumns[2]},
			},
		},
	}
	// SubtitledVideoColumns holds the columns for the "subtitled_video" table.
	SubtitledVideoColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "url", Type: field.TypeString, Unique: true, SchemaType: map[string]string{"postgres": "varchar(64)"}},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "original_video_id", Type: field.TypeInt},
	}
	// SubtitledVideoTable holds the schema information for the "subtitled_video" table.
	SubtitledVideoTable = &schema.Table{
		Name:       "subtitled_video",
		Columns:    SubtitledVideoColumns,
		PrimaryKey: []*schema.Column{SubtitledVideoColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subtitled_video_original_video_subtitled_videos",
				Columns:    []*schema.Column{SubtitledVideoColumns[3]},
				RefColumns: []*schema.Column{OriginalVideoColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		OriginalVideoTable,
		SubtitledVideoTable,
	}
)

func init() {
	OriginalVideoTable.Annotation = &entsql.Annotation{
		Table: "original_video",
	}
	SubtitledVideoTable.ForeignKeys[0].RefTable = OriginalVideoTable
	SubtitledVideoTable.Annotation = &entsql.Annotation{
		Table: "subtitled_video",
	}
}
